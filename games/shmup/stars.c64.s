      .p02
      .include "c64.inc"

      .autoimport

;The ROL Star Field animation by Richard/TND (From Hyper Duel)

.code
.proc	_main: near
main:
                        sei
                        lda #$00
                        sta $d020
                        sta $d021

                        ldx #(5*8)-1
:                       lda starset,x
                        sta $3000,x
                        dex
                        bpl :-

;Draw starfield to screen $0400

                        ldx #$00
@copyscreen:            lda stardata,x
                        sta $0400,x
                        lda stardata+$100,x
                        sta $0500,x
                        lda stardata+$200,x
                        sta $0600,x
                        lda stardata+$2e8,x
                        sta $06e8,x
                        lda #$0f ;Light grey stars for now
                        sta $d800,x
                        sta $d900,x
                        sta $da00,x
                        sta $dae8,x
                        inx
                        bne @copyscreen

                        lda #<@irq
                        sta $0314
                        lda #>@irq
                        sta $0315
                        lda #$7f
                        sta $dc0d
                        lda #$31
                        sta $d012
                        lda #$1b
                        sta $d011
                        lda #$08
                        sta $d016
                        lda #$1c ;Char at $3000
                        sta $d018
                        lda #$01
                        sta $d01a ;Interrupt is on!
                        cli
:                       jmp :-   ;Continuous loop to itself!

@irq:
                        inc $d020

                        inc $d019 ;$D019 interrupt on
                        lda #$fc  ;Raster position 252
                        sta $d012
                        jsr @starfield

                        dec $d020
                        jmp $ea7e

;Star field source:
;Starfield

@starfield:
         inc starcontrol
         lda starcontrol
         cmp #$03
         beq @doscroll
         rts
@doscroll:
         lda #0
         sta starcontrol

         ldx #0
         jsr @starscroll
         jsr @starscroll
         ldx #1
         jsr @starscroll
         ldx #2
         jsr @starscroll
         jsr @starscroll
         jsr @starscroll
         ldx #3
         jsr @starscroll
         ldx #4
         jsr @starscroll
         jsr @starscroll
         jsr @starscroll
         ldx #5
         jsr @starscroll
         jsr @starscroll
         ldx #6
         jsr @starscroll
         ldx #7
         jsr @starscroll
         jsr @starscroll
         rts

@starscroll:
         lda $3020,x
         rol $3008,x
         rol $3010,x
         rol $3018,x
         rol $3020,x
         sta $3008,x
         rts

.endproc

;The starfield char data here. Hell yeah!
;That's what we want :o)

.data
starset:
;                  * = $3200

                  ;Shift + * (Blank it)
                  .byte %00000000 ;Weird eh? Those are for the stars
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  ;Shift + A
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00100000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %01000000
                  ;Shift + B
                  .byte %00000000
                  .byte %00000000
                  .byte %00010000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000100
                  .byte %00000000
                  ;Shift + C
                  .byte %00000000
                  .byte %01000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000
                  .byte %00001000
                  .byte %00000000
                  ;Shift + D
                  .byte %00000010
                  .byte %00000000
                  .byte %00000000
                  .byte %00010000
                  .byte %00000000
                  .byte %00000000
                  .byte %00000000

;Now for the screen data

.data

stardata:
.byte $02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01
.byte $03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02
.byte $01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04
.byte $04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03
.byte $02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01
.byte $03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02
.byte $01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04
.byte $04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03
.byte $02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01
.byte $03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02
.byte $01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04
.byte $04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03
.byte $02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01
.byte $03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02
.byte $01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04
.byte $04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03
.byte $02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01
.byte $03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02
.byte $01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04
.byte $04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03
.byte $02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01
.byte $03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02
.byte $01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04
.byte $04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03
.byte $02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01
.byte $03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02
.byte $01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04
.byte $04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03,$04,$01,$02,$03
.byte 0,0,0,0,0,0,0

.bss
starcontrol:  .res 1 ;  = $0340

;just to fulfill the linker contract of the ld65 target -t c64
.segment "STARTUP"
.segment "INIT"
.segment "ONCE"
