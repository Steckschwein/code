!cpu 65c02
;----------------------------------------------------------------------------------------------
; constants
;----------------------------------------------------------------------------------------------
clockspeed	= 3000000 ; 3 MHz
jiffies 	= 9999  ; jiffy count 100Hz for 1MHz systen
count		= clockspeed / 1000000 * jiffies
;
;CSUART   ; UART at $0200
;CSVIA    ; VIA  at $0210
;CSVDP    ; VDP  at $0220
;CSSND    ; SND  at $0230
;CSLCD    ; LCD  at $0240
;----------------------------------------------------------------------------------------------
; zeropage locations 
;----------------------------------------------------------------------------------------------

; IO Channels
chn_out = $00
chn_in  = $01
ram_end_l   = $02
ram_end_h   = ram_end_l+1


; Cursor Position
crs_x	= $d0
crs_y	= $d1

; IRQ vector
irqvec		= $e0
; general purpose temp variables
tmp0		= $f0
tmp1		= $f1
tmp2		= $f2
tmp3		= $f3
tmp4		= $f4
tmp5		= $f5
tmp6		= $f6
tmp7		= $f7


; pointer for io block operations
sd_blkptr 	= $fc

; pointer for string output functions 
msgptr 		= $fe

; general purpose address location
; transfer routine addresses
addr 		= $e2
adrl     =addr
adrh     =addr+1


; SD CArd command parameter/result buffer
sd_cmd_param = $0300
sd_cmd_chksum	= sd_cmd_param+4
sd_cmd_result = $031f

; SD Card error
; $ff - No Card
; $0f - Invalid Card
; $00 - No error
sd_cmd_errno = $0320


startaddr	= $0700
endaddr     = $0702
length		= $0704




charset  =$e000
;----------------------------------------------------------------------------------------------
; SD Card commands
;----------------------------------------------------------------------------------------------
cmd0 	= $40       ; GO_IDLE_STATE
cmd1 	= $40 + 1 	; SEND_OP_COND
cmd8 	= $40 + 8   ; SEND_IF_COND
cmd16	= $40 + 16 	; SET_BLOCKLEN
cmd17	= $40 + 17	; READ_SINGLE_BLOCK
cmd24	= $40 + 24	; WRITE_BLOCK
cmd55	= $40 + 55	; APP_CMD
cmd58	= $40 + 58	; READ_OCR
acmd41	= $40 + 41

;----------------------------------------------------------------------------------------------
; UART
;----------------------------------------------------------------------------------------------
uart1		= $0200
uart1rxtx	= uart1+0
uart1ier	= uart1+0
uart1dll	= uart1+0
uart1dlh	= uart1+1
uart1iir	= uart1+2
uart1fcr	= uart1+2
uart1lcr	= uart1+3
uart1mcr	= uart1+4
uart1lsr	= uart1+5
uart1msr	= uart1+6
uart1scr	= uart1+7
;----------------------------------------------------------------------------------------------


;----------------------------------------------------------------------------------------------
; VIA1 
;----------------------------------------------------------------------------------------------
via1		= $0210
via1porta	= via1+1
via1portb	= via1
via1ddrb 	= via1+2
via1ddra	= via1+3
via1t1cl	= via1+4
via1t1ch	= via1+5
via1t2cl	= via1+8
via1t2ch	= via1+9
via1sr		= via1 + $0a
via1acr		= via1 + $0b
via1pcr		= via1 + $0c
via1ifr		= via1 + $0d
via1ier		= via1 + $0e
;----------------------------------------------------------------------------------------------

;----------------------------------------------------------------------------------------------
; LCD 
;-------------------------------------------------------------------------------------------	---
lcdctl		= $0240
lcddata		= lcdctl+1
;----------------------------------------------------------------------------------------------

;----------------------------------------------------------------------------------------------
; MACROS
;-------------------------------------------------------------------------------------------	---
!macro PrintChar char {
        lda #char
        jsr chrout
}
!macro PrintString .word {
	+SetVector .word, msgptr
        jsr lcdstring
}
!macro PrintStringAt .word,.x,.y {
	ldx #.x
	ldy #.y
	jsr lcdxy	

	+SetVector .word, msgptr
    jsr lcdstring

}
!macro SetVector .word, .addr {
        lda #<.word
        sta .addr
        lda #>.word
        sta .addr+1
}

