*=$e000
;----------------------------------------------------------------------------------------------
; LCD
;----------------------------------------------------------------------------------------------
lcdctl          = $d200
lcddata         = lcdctl+1
;----------------------------------------------------------------------------------------------

do_reset	

;----------------------------------------------------------------------------------------------
; *** LCD initialisation
;----------------------------------------------------------------------------------------------
init_lcd  	ldx #$04            ;do function set 4 times
-		  	lda #$38            ;function set: 8 bit, 2 lines, 5x7
			sta lcdctl
;			jsr lcdbusy         ;wait for busy flag to clear
--			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne --

			dex
			bne -
			lda #$06            ;entry mode set: increment, no shift
			sta lcdctl
;			jsr lcdbusy
-			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne -

			lda #$0e            ;display on, cursor on, blink off
			sta lcdctl
;			jsr lcdbusy
-			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne -

			lda #$01            ;clear display
			sta lcdctl
;			jsr lcdbusy
-			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne -

			lda #$80            ;ddram address set: $00
			sta lcdctl
	;		jsr lcdbusy
-			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne -


			lda #'X'
			sta lcddata            ;output the character
	;		jsr lcdbusy
-			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne -
			lda lcdctl            ;get current ddram address
			and #$7f
			cmp #$28          	;wrap from pos $13 (line 1 char 20)...
			bne +
			lda #$c0            	;...to $40 (line 2 char 1)
			sta lcdctl
	;		jsr lcdbusy
-			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne -
+
-
!for i,512 {
			nop
}
			jmp -



;----------------------------------------------------------------------------------------------
; Interrupt vectors
;----------------------------------------------------------------------------------------------
; $FFFA/$FFFB NMI Vector
*= $fffa
!byte <do_reset
!byte >do_reset
; $FFFC/$FFFD reset vector
;*= $fffc
!byte <do_reset
!byte >do_reset
; $FFFE/$FFFF IRQ vector
;*= $fffe
!byte <do_reset
!byte >do_reset
