!src "../vdp/t9929.h.a"
!src "../vdp/t99xx.lib.a"

!align	255,0;

.cursor_sprite_tab
	!byte	$ff,	$f0,	0,	Gray
	!byte	$d0,	$00,	4,	Medium_Green

.screen=$c000
.screen_status !byte 0
.screen_frames !byte 0
.saved_char	!byte ' '
.sprite_ptr !byte 0
.COLS=32
.ROWS=24
.WRITE=1<<0
.DIRTY=1<<1
.CURSOR=1<<2
.CURSOR_BUSY=1<<3



.textui_init
	jsr	vdp_display_off			;display off
	jsr vdp_mode_gfx1_sprites_off
	jsr	.textui_blank			;blank screen buffer
	
	+SetVector charset, .adrl	;setup vram with charset
	ldx	#$08
	lda	#$00
	ldy	#$40+$00
	jsr	vdp_memcpy

	+SetVector	.assets, .adrl	;load cursor sprites to vram
	ldx	#$02*8
	lda	#$00
	ldy	#$40+$08
	jsr	vdp_load_sprites16x16
	
	jsr	vdp_mode_gfx1_sprites_off	;clean sprite attribute table
	+SetVector	.cursor_sprite_tab, .adrl
	ldx	#$08
	lda	#$00
	ldy	#$40+$3c
	jsr	vdp_memcpys
	

	lda	#Medium_Green<<4|Black		;enable gfx 1
	jsr	vdp_mode_gfx1
	
	stz	crs_x
	stz	crs_y
	jmp .textui_update_crs_ptr		;init cursor pointer

.textui_blank
	ldx	#$00
	lda	#' '
-	sta	.screen,x
	sta	.screen+256,x
	sta	.screen+512,x
	inx
	bne	-
-	sta	.screen+768,x	;last line for scroll up
	inx
	cpx	#.COLS
	bne	-
	jmp	.textui_screen_dirty
	
.textui_cursor
	lda .screen_status
	and	#.WRITE
	bne	+++
	lda .screen_frames
	and	#$0f
	bne	+++
	lda	#.CURSOR
	tsb	.screen_status
	beq	+
	trb	.screen_status
  	lda	.saved_char
	jmp _textui_put
+	lda	(crs_ptr)			;save char
	sta	.saved_char
	lda	#160
	jmp _textui_put
+++	rts
	
.textui_update_screen
;	lda	#Gray
;	jsr	vdp_bgcolor	

	inc	.screen_frames

	jsr	.textui_busy
	jsr	.textui_cursor
	
	;TODO dirty check .screen_status AND 1 ...
	lda	.screen_status
	and	#.DIRTY
	beq	+		;exit if not dirty
	
	+SetVector	.screen, .adrl
	lda	#$00
	ldy	#$40+$18
	ldx	#$03
	jsr	vdp_memcpy
	
	lda	.screen_status		;clean dirty
	and	#!.DIRTY
	sta	.screen_status

+	lda	#Black
	jsr	vdp_bgcolor
	rts	

.textui_busy
	lda	.screen_status
	and	#.CURSOR_BUSY
	beq	++
	lda	.screen_frames
	and	#$03
	bne	++
	lda	#$02
	ldy	#$40+$3c
	jsr vdp_sreg
	lda .sprite_ptr
	sta	a_vram
	clc
	adc	#$04		;16x16 sprites, pointer * 4
	cmp	#$04*8
	bne	+
	lda	#$00
+	sta	.sprite_ptr
++	rts

	
.textui_scroll_up
	ldx	#$00
-	lda	.screen+.COLS,x
	sta	.screen,x
	inx
	bne	-
-	lda	.screen+256+.COLS,x
	sta	.screen+256,x
	inx
	bne	-
-	lda	.screen+512+.COLS,x
	sta	.screen+512,x
	inx
	bne	-
	rts
	
.inc_cursor_y
	lda crs_y
	cmp	#23		;last line
	bne	+
	jmp	.textui_scroll_up	; scroll and exit
+	inc crs_y
	rts
	
.textui_update_crs_ptr
	pha
	lda	crs_y	; * .COLS
	asl	
	asl	
	asl	
	asl
	asl
	ora	crs_x
	sta	crs_ptr
	
	lda	crs_y	; * .COLS
	lsr			; /8 -> page offset 0-2
	lsr
	lsr
	clc
	adc	#>.screen
	sta	crs_ptr+1
	pla
	rts


_textui_print
	inc .screen_status	;write on
	ldy	#$00
-	lda	(msgptr),y
	beq	+
	jsr .textui_dispatch_char
	iny
	bne	-
+	dec	.screen_status	;write off
	jmp	.textui_screen_dirty

_textui_chrout
	beq	+	; \0 char
	pha		; safe char
	inc .screen_status	;write on
	jsr .textui_dispatch_char
	dec	.screen_status	;write off
	jsr	.textui_screen_dirty
	pla								; restore char
+	rts

.textui_dispatch_char
	cmp	#$0a			;cariage return
	bne	+
	lda	.saved_char		
	sta	(crs_ptr)		;restore char at cursor position
	stz	crs_x
	bra	+++
+	cmp	#$0d			;line feed
	bne	+
	jsr	.inc_cursor_y
	bra	+++
+	cmp	#$08			;backspace
	bne	+
	lda	#' '
	sta	.saved_char		;blank at char position and also the saved char 
	sta	(crs_ptr)
	lda	crs_x
	beq	++
	dec	crs_x
	bra	+++
++	lda	crs_y			; cursor y=0, no dec
	beq	+++
	dec	crs_y
	lda	#$1f			; end of line
	sta	crs_x
	bra	+++
+	sta	(crs_ptr)
	lda	crs_x
	cmp	#$1f
	beq +
	inc	crs_x
	bra	+++
+	stz	crs_x
	jsr	.inc_cursor_y
+++	jmp	.textui_update_crs_ptr
	
.textui_screen_dirty
	lda	.screen_status		;set dirty
	ora	#.DIRTY
	sta	.screen_status
	rts

_textui_toggle_cursor_busy
	lda	#.CURSOR_BUSY
	tsb	.screen_status
	beq	+
	trb	.screen_status
+	rts
	
_textui_put
	sta	(crs_ptr)
	jmp	.textui_screen_dirty
	rts
	
_textui_println
	jmp	_textui_print

!macro	V_ToggleCursorBusy {
	jsr	_textui_toggle_cursor_busy
}

!macro	V_SetColor .color {
	lda	.color
	jsr	vdp_bgcolor
}
