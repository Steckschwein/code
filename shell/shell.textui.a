!src "../vdp/t9929.h.a"
!src "../vdp/t99xx.lib.a"

.p_cursor=$f8	;cursor pointer
.cursor_x=$fa
.cursor_y=$fb

.screen=$c000
.screen_status !byte 0
.screen_frames !byte 0
.COLS=32
.ROWS=24
.CURSOR=0
.DIRTY=1

.textui_init
	jsr	vdp_display_off			;display off
	
	+SetVector charset, .adrl	;setup vram with characters
	ldx	#$08
	lda	#$00
	ldy	#$40+$00
	jsr	vdp_memcpy

	jsr	.textui_blank			;blank screen
		
	;TODO FIXME remove after init
	jsr	vdp_mode_gfx1_blank		;blank screen vram
	
	lda	#Cyan<<4|Black			;gfx 1 with cyan/black
	jsr	vdp_mode_gfx1
	
	stz	.cursor_x
	stz	.cursor_y
	jsr	.textui_screen_addr		;init cursor pointer
	
	rts

.textui_blank
	ldx	#$00
	lda	#' '
-	sta	.screen,x
	sta	.screen+256,x
	sta	.screen+512,x
	inx
	bne	-
	ldx	#$00
-	sta	.screen+768,x	;last line for scroll up
	inx
	cpx	#.COLS
	bne	-
	rts
	
.textui_cursor
	lda .screen_frames
	and	#$10
	beq	+
	lda #160
	jmp	++
+  	lda   #' '
++	jmp _textui_put
	rts
	
.textui_update_screen
	inc	.screen_frames

	jsr	.textui_cursor
	
	;TODO dirty check .screen_status AND 1 ...
+	lda	#Gray
	jsr	vdp_bgcolor	
	+SetVector	.screen, .adrl
	lda	#$00
	ldy	#$40+$18
	ldx	#$03
	jsr	vdp_memcpy
	lda	#Black
	jsr	vdp_bgcolor
	rts	

.textui_scroll_up
	ldx	#$00
-	lda	.screen+.COLS,x
	sta	.screen,x
	lda	.screen+256+.COLS,x
	sta	.screen+256,x
	lda	.screen+512+.COLS,x
	sta	.screen+512,x
	inx
	bne	-
	rts
	
.inc_cursor_y
	lda .cursor_y
	cmp	#23		;last line
	bne	+
	jmp	.textui_scroll_up	; scroll and exit
+	inc .cursor_y
	rts
	
.textui_screen_addr
	lda	.cursor_y	; * .COLS
	asl	
	asl	
	asl	
	asl
	asl
	ora	.cursor_x
	sta	.p_cursor
	
	lda	.cursor_y	; * .COLS
	lsr			; /8 -> page offset 0-2
	lsr
	lsr
	clc
	adc	#>.screen
	sta	.p_cursor+1
	rts

	
_textui_print
	ldy	#$00
-	lda	(msgptr),y
	beq	+++
	cmp	#$0a
	bne	+
	stz	.cursor_x
	jmp	++
+	cmp	#$0d	
	bne	+
	jsr	.inc_cursor_y
	jmp	++
+	jsr	_textui_out
++	iny
	bne	-
+++	rts
	
_textui_out
	pha
	jsr	.textui_screen_addr
	pla	
	sta	(.p_cursor)
	inc	.cursor_x
	lda	.cursor_x
	and	#$20
	cmp	#$20
	bne	+
	stz	.cursor_x
	jsr	.inc_cursor_y
+	rts

_textui_put
	sta	(.p_cursor)
	rts
	
_textui_println
	jmp	_textui_print
	
!macro	V_Print .word {
	+SetVector .word, msgptr
	jsr	_textui_print
}

!macro	V_Println .word {
	+SetVector .word, msgptr
	jsr	_textui_println
}

.bg	!byte 0
