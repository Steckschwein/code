*=$1000
!src "../bios/defs.h.a"
!src "../bios/bios.h.a"
; sdcard pin assignment:
; SD   | Signal | VIA Port B
;   1  |    /CS |          1
;   2  | CMD/DI |          6
;   5  |    CLK |	   0
;   7  | DAT/DO |          7

	sei


	lda #%01111111
	sta via1ddrb
	lda #%01111110
	sta via1portb


wait74
	ldx #74

-	inc via1portb
	nop
	dec via1portb

	dex
	bne -

	; set CS line to LOW
	lda #%11111101
	and via1portb	
	sta via1portb
	

	; send CMD0 - init SD card to SPI mode
	ldx #$00
-	lda cmd0,x
	jsr spibyte
	inx
	cpx #$06
	bne -

	lda #%01000001
	ora via1portb
	sta via1portb


; 	ldx #$00
; -	lda cmd58,x
; 	jsr spibyte
; 	inx
; 	cpx #$06
; 	bne -

	; lda #%01000000
	; ora via1portb
	; sta via1portb

loop
	dec via1portb
	nop
	inc via1portb
	nop
	jmp loop	
	

spibyte	
	pha
	phx
	phy
	ldx #$08
	clc
--
	asl

	tay
	bcs one

zero	
	lda #%10111111
	and via1portb
	sta via1portb
	bra clk

one	lda #%01000000
	ora via1portb	
	sta via1portb
	
clk
	inc via1portb
	tya
	dec via1portb

	dex
	bne --
	ply
	plx
	pla
	rts


	; *** Wait for LCD busy bit to clear
; registers preserved
i_lcdbusy   pha
-			lda lcdctl            ;read from lcd register 0
			and #$80            ;check bit 7 (busy)
			bne -
			pla
			rts
; cmd0 reset card to SPI mode
cmd0	!byte %01000000, %00000000, %00000000, %00000000, %00000000, %10010101
; cmd58 requests the contents of the operating conditions register for the connected card
cmd58	!byte %01111010, %00000000, %00000000, %00000000, %00000000, %01110101
