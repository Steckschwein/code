;
; File generated by cc65 v 2.18 - Git 555282497
;
	.fopt		compiler,"cc65 v 2.18 - Git 555282497"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_strlen
	.import		_toupper
	.import		_cprintf
	.import		_cgetc
	.import		_opl2_write
	.import		_opl2_init
	.export		_snd01
	.export		_snd02
	.export		_snd03
	.export		_snd04
	.export		_snd05
	.export		_snd06
	.export		_snd07
	.export		_snd08
	.export		_sounds
	.export		_song_ix
	.export		_soundport
	.export		_adlibjam
	.export		_soundone
	.export		_soundall
	.export		_active
	.export		_play
	.export		_txt
	.export		_mapping
	.export		__sleep
	.export		_song
	.export		_play_song
	.export		_main

.segment	"DATA"

_snd01:
	.byte	$05
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$00
	.byte	$0B
	.byte	$04
	.byte	$04
	.byte	$06
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd02:
	.byte	$08
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$02
	.byte	$04
	.byte	$01
	.byte	$0D
	.byte	$0F
	.byte	$02
	.byte	$01
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
_snd03:
	.byte	$0F
	.byte	$03
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$04
	.byte	$02
	.byte	$05
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
_snd04:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd05:
	.byte	$0F
	.byte	$04
	.byte	$06
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$0F
	.byte	$03
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
_snd06:
	.byte	$0F
	.byte	$0B
	.byte	$07
	.byte	$00
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$01
	.byte	$0E
	.byte	$0F
	.byte	$03
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd07:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd08:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_sounds:
	.addr	_snd01
	.addr	_snd02
	.addr	_snd03
	.addr	_snd04
	.addr	_snd05
	.addr	_snd06
	.addr	_snd07
	.addr	_snd08
_song_ix:
	.byte	$00
_active:
	.word	$0000
_txt:
	.byte	$41,$64,$4C,$69,$62,$20,$43,$6C,$61,$76,$69,$65,$72,$20,$62,$79
	.byte	$20,$49,$6E,$64,$72,$65,$6B,$20,$50,$69,$6E,$73,$65,$6C,$20,$31
	.byte	$39,$39,$33,$24,$0A,$53,$74,$65,$63,$6B,$73,$63,$68,$77,$65,$69
	.byte	$6E,$20,$70,$6F,$72,$74,$20,$6F,$6E,$20,$31,$32,$2F,$32,$31,$2F
	.byte	$32,$30,$31,$38,$0A,$50,$6C,$61,$79,$20,$6E,$6F,$77,$20,$6F,$72
	.byte	$20,$70,$72,$65,$73,$73,$20,$45,$53,$43,$20,$74,$6F,$20,$65,$78
	.byte	$69,$74,$2E,$2E,$2E,$20,$24,$0A,$50,$6C,$61,$79,$20,$6F,$6E,$20
	.byte	$74,$68,$65,$73,$65,$20,$6B,$65,$79,$73,$3A,$0A,$0A,$75,$70,$70
	.byte	$65,$72,$20,$6D,$61,$6E,$75,$61,$6C,$3A,$0A,$0A,$6C,$6F,$77,$65
	.byte	$72,$20,$6D,$61,$6E,$75,$61,$6C,$3A,$0A,$0A,$20,$20,$64,$20,$65
	.byte	$20,$20,$20,$66,$20,$61,$20,$62,$20,$20,$20,$64,$20,$65,$0A,$20
	.byte	$43,$20,$44,$20,$45,$20,$46,$20,$47,$20,$41,$20,$42,$20,$43,$20
	.byte	$44,$20,$45,$0A,$0A,$43,$72,$73,$55,$70,$20,$43,$72,$73,$44,$6F
	.byte	$77,$6E,$20,$2D,$20,$63,$68,$6F,$6F,$73,$65,$20,$6F,$63,$74,$61
	.byte	$76,$65,$0A,$53,$68,$69,$66,$74,$20,$31,$20,$2E,$2E,$2E,$20,$37
	.byte	$20,$2D,$20,$63,$68,$6F,$6F,$73,$65,$20,$73,$6F,$75,$6E,$64,$00
_song:
	.addr	L015C

.segment	"RODATA"

L015C:
	.byte	$67,$67,$65,$67,$67,$65,$67,$66,$64,$66,$65,$67,$67,$65,$67,$67
	.byte	$65,$67,$66,$64,$66,$65,$65,$64,$64,$64,$66,$66,$66,$65,$65,$65
	.byte	$41,$41,$67,$67,$67,$43,$67,$65,$67,$66,$64,$63,$00
L016E:
	.byte	$25,$73,$00

; ---------------------------------------------------------------
; void __near__ soundport (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_soundport: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _opl2_write
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ adlibjam (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_adlibjam: near

.segment	"CODE"

	jsr     pusha
	ldx     #$00
	lda     (sp)
	cmp     #$03
	bcs     L0275
	jmp     incsp1
L0275:	lda     (sp)
	cmp     #$06
	bcs     L0277
	clc
	adc     #$05
	jmp     incsp1
L0277:	lda     (sp)
	ldy     #$0A
	jsr     incaxy
	ldx     #$00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ soundone (unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_soundone: near

.segment	"CODE"

	jsr     pusha
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$C0
	jsr     incaxy
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	lda     (sp),y
	jsr     _adlibjam
	ldy     #$14
	sta     (sp),y
	ldx     #$00
	lda     (sp),y
	ldy     #$60
	jsr     incaxy
	jsr     pusha
	ldy     #$14
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$80
	jsr     incaxy
	jsr     pusha
	ldy     #$12
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$20
	jsr     incaxy
	jsr     pusha
	ldy     #$0C
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	ldy     #$10
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$40
	jsr     incaxy
	jsr     pusha
	ldy     #$0F
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$E0
	jsr     incaxy
	jsr     pusha
	ldy     #$0D
	lda     (sp),y
	jsr     _soundport
	ldy     #$14
	clc
	lda     #$03
	adc     (sp),y
	sta     (sp),y
	ldx     #$00
	lda     (sp),y
	ldy     #$60
	jsr     incaxy
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$80
	jsr     incaxy
	jsr     pusha
	ldy     #$09
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$20
	jsr     incaxy
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	ldy     #$07
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$40
	jsr     incaxy
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$E0
	jsr     incaxy
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     _soundport
	ldy     #$15
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ soundall (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_soundall: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp2
	ldx     #$00
	txa
L0283:	jsr     stax0sp
	cmp     #$09
	txa
	sbc     #$00
	bvc     L00EE
	eor     #$80
L00EE:	bmi     L0284
	jmp     incsp4
L0284:	lda     (sp)
	jsr     pusha
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$05
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	jsr     pusha
	ldy     #$06
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	jsr     pusha
	ldy     #$07
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	jsr     pusha
	ldy     #$08
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$04
	lda     (ptr1),y
	jsr     pusha
	ldy     #$09
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	jsr     pusha
	ldy     #$0A
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$06
	lda     (ptr1),y
	jsr     pusha
	ldy     #$0B
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$07
	lda     (ptr1),y
	jsr     pusha
	ldy     #$0C
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$08
	lda     (ptr1),y
	jsr     pusha
	ldy     #$0D
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$09
	lda     (ptr1),y
	jsr     pusha
	ldy     #$0E
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0A
	lda     (ptr1),y
	jsr     pusha
	ldy     #$0F
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0B
	lda     (ptr1),y
	jsr     pusha
	ldy     #$10
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0C
	lda     (ptr1),y
	jsr     pusha
	ldy     #$11
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0D
	lda     (ptr1),y
	jsr     pusha
	ldy     #$12
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0E
	lda     (ptr1),y
	jsr     pusha
	ldy     #$13
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0F
	lda     (ptr1),y
	jsr     pusha
	ldy     #$14
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$10
	lda     (ptr1),y
	jsr     pusha
	ldy     #$15
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$11
	lda     (ptr1),y
	jsr     pusha
	ldy     #$16
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$12
	lda     (ptr1),y
	jsr     pusha
	ldy     #$17
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$13
	lda     (ptr1),y
	jsr     _soundone
	jsr     ldax0sp
	ina
	jne     L0283
	inx
	jmp     L0283

.endproc

; ---------------------------------------------------------------
; void __near__ play (unsigned int, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_play: near

.segment	"CODE"

	jsr     pushax
	lda     _active
	ldx     _active+1
	ldy     #$B0
	jsr     incaxy
	jsr     pusha
	lda     #$00
	jsr     _soundport
	lda     _active
	ldx     _active+1
	ldy     #$A0
	jsr     incaxy
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _soundport
	lda     _active
	ldx     _active+1
	ldy     #$B0
	jsr     incaxy
	jsr     pusha
	ldy     #$04
	jsr     ldaxysp
	jsr     shlax2
	ldy     #$20
	jsr     incaxy
	sta     ptr1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	lda     _active
	ldx     _active+1
	ina
	bne     L012B
	inx
L012B:	jsr     pushax
	lda     #$09
	jsr     tosumoda0
	sta     _active
	stx     _active+1
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ mapping (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_mapping: near

.segment	"CODE"

	jsr     pusha
	ldx     #$00
	lda     (sp)
	cmp     #$41
	beq     L028B
	cmp     #$42
	beq     L028C
	cmp     #$43
	beq     L028D
	cmp     #$44
	beq     L028E
	cmp     #$45
	beq     L028F
	cmp     #$63
	beq     L0286
	cmp     #$64
	beq     L0287
	cmp     #$65
	beq     L0288
	cmp     #$66
	beq     L0289
	cmp     #$67
	beq     L028A
	bra     L0290
L0286:	lda     #$79
	jmp     incsp1
L0287:	lda     #$78
	jmp     incsp1
L0288:	lda     #$63
	jmp     incsp1
L0289:	lda     #$76
	jmp     incsp1
L028A:	lda     #$62
	jmp     incsp1
L028B:	lda     #$6E
	jmp     incsp1
L028C:	lda     #$6D
	jmp     incsp1
L028D:	lda     #$2C
	jmp     incsp1
L028E:	lda     #$2E
	jmp     incsp1
L028F:	lda     #$2D
	jmp     incsp1
L0290:	txa
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ _sleep (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	__sleep: near

.segment	"CODE"

	jsr     pusha
	ldx     #$20
	lda     #$00
	jsr     push0ax
	bra     L0154
L0156:	ldx     #$00
	lda     #$01
	jsr     lsubeq0sp
L0158:	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stz     sreg
	stz     sreg+1
	txa
	jsr     tosneeax
	bne     L0156
	ldy     #$04
	lda     (sp),y
	sec
	sbc     #$01
	sta     (sp),y
L0154:	ldy     #$04
	lda     (sp),y
	bne     L0158
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ play_song (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_play_song: near

.segment	"CODE"

	lda     _song_ix
	jsr     pusha0
	lda     _song
	ldx     _song+1
	jsr     _strlen
	jsr     tosicmp
	bne     L015F
	lda     #$00
	stz     _song_ix
	tax
	rts
L015F:	lda     _song_ix
	inc     _song_ix
	clc
	adc     _song
	ldx     _song+1
	bcc     L0291
	inx
L0291:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1)
	jmp     _mapping

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     decsp1
	lda     #$03
	jsr     pusha0
	jsr     _opl2_init
	lda     #<(_snd01)
	ldx     #>(_snd01)
	jsr     _soundall
	lda     #<(L016E)
	ldx     #>(L016E)
	jsr     pushax
	lda     #<(_txt)
	ldx     #>(_txt)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
L0171:	jsr     _cgetc
	ldy     #$02
	sta     (sp),y
	lda     _song_ix
	bne     L0293
	lda     (sp),y
	cmp     #$50
	bne     L0295
L0293:	jsr     _play_song
	ldy     #$02
	sta     (sp),y
	lda     #$01
	jsr     __sleep
	bra     L017D
L0295:	lda     (sp),y
	ldx     #$00
	jsr     _toupper
	ldy     #$02
	sta     (sp),y
L017D:	ldy     #$02
	ldx     #$00
	lda     (sp),y
	cmp     #$15
	jeq     L019E
	cmp     #$1E
	jeq     L018A
	cmp     #$1F
	jeq     L0185
	cmp     #$21
	jeq     L0297
	cmp     #$22
	jeq     L0297
	cmp     #$24
	jeq     L0297
	cmp     #$25
	jeq     L0297
	cmp     #$26
	jeq     L0297
	cmp     #$27
	jeq     L0267
	cmp     #$2B
	jeq     L026C
	cmp     #$2C
	jeq     L01E4
	cmp     #$2D
	jeq     L01FB
	cmp     #$2E
	jeq     L01EF
	cmp     #$2F
	jeq     L01A3
	cmp     #$30
	jeq     L0258
	cmp     #$32
	jeq     L0206
	cmp     #$33
	jeq     L0212
	cmp     #$35
	jeq     L0224
	cmp     #$36
	jeq     L0230
	cmp     #$37
	jeq     L023C
	cmp     #$39
	jeq     L024E
	cmp     #$42
	jeq     L01CB
	cmp     #$43
	jeq     L01BC
	cmp     #$44
	jeq     L01B7
	cmp     #$45
	jeq     L0218
	cmp     #$47
	jeq     L01C6
	cmp     #$48
	jeq     L01D0
	cmp     #$49
	jeq     L0248
	cmp     #$4A
	jeq     L01DA
	cmp     #$4C
	jeq     L01E9
	cmp     #$4D
	jeq     L01DF
	cmp     #$4E
	jeq     L01D5
	cmp     #$4F
	jeq     L0253
	cmp     #$50
	jeq     L025D
	cmp     #$51
	jeq     L0201
	cmp     #$52
	jeq     L021E
	cmp     #$53
	jeq     L01AD
	cmp     #$54
	jeq     L022A
	cmp     #$55
	jeq     L0242
	cmp     #$56
	jeq     L01C1
	cmp     #$57
	jeq     L020C
	cmp     #$58
	jeq     L01B2
	cmp     #$59
	jeq     L01A8
	cmp     #$5A
	jeq     L0236
	cmp     #$81
	jeq     L0262
	cmp     #$94
	jeq     L01F5
	jmp     L0299
L0185:	jsr     ldax0sp
	cmp     #$02
	txa
	sbc     #$00
	jcc     L0183
	jsr     ldax0sp
	jsr     decax1
	jsr     stax0sp
	jmp     L0183
L018A:	dey
	lda     (sp),y
	cmp     #$00
	bne     L018D
	lda     (sp)
	cmp     #$05
L018D:	jcs     L0183
	jsr     ldax0sp
	ina
	bne     L018F
	inx
L018F:	jsr     stax0sp
	jmp     L0183
L0297:	lda     (sp),y
	ldy     #$21
	jsr     decaxy
	jsr     aslax1
	clc
	adc     #<(_sounds)
	tay
	txa
	adc     #>(_sounds)
	tax
	tya
	jsr     ldaxi
	jsr     _soundall
	jmp     L0183
L019E:	lda     _sounds+4
	ldx     _sounds+4+1
	jsr     _soundall
	jmp     L0183
L01A3:	lda     _sounds+14
	ldx     _sounds+14+1
	jsr     _soundall
	jmp     L0183
L01A8:	jsr     ldax0sp
	jsr     decax1
	jsr     pushax
	ldx     #$02
	lda     #$AE
	jmp     L0292
L01AD:	jsr     pushw0sp
	ldx     #$01
	lda     #$6B
	jmp     L0292
L01B2:	jsr     pushw0sp
	ldx     #$01
	lda     #$81
	jmp     L0292
L01B7:	jsr     pushw0sp
	ldx     #$01
	lda     #$98
	jmp     L0292
L01BC:	jsr     pushw0sp
	ldx     #$01
	lda     #$B0
	jmp     L0292
L01C1:	jsr     pushw0sp
	ldx     #$01
	lda     #$CA
	jmp     L0292
L01C6:	jsr     pushw0sp
	ldx     #$01
	lda     #$E5
	jmp     L0292
L01CB:	jsr     ldax0sp
	jmp     L029C
L01D0:	jsr     pushw0sp
	ldx     #$02
	lda     #$20
	jmp     L0292
L01D5:	jsr     pushw0sp
	ldx     #$02
	lda     #$41
	jmp     L0292
L01DA:	jsr     pushw0sp
	ldx     #$02
	lda     #$63
	jmp     L0292
L01DF:	jsr     pushw0sp
	ldx     #$02
	lda     #$87
	jmp     L0292
L01E4:	jsr     pushw0sp
	ldx     #$02
	lda     #$AE
	jmp     L0292
L01E9:	jsr     ldax0sp
	ina
	bne     L01EC
	inx
L01EC:	jsr     pushax
	ldx     #$01
	lda     #$6B
	jmp     L0292
L01EF:	jsr     ldax0sp
	ina
	bne     L01F2
	inx
L01F2:	jsr     pushax
	ldx     #$01
	lda     #$81
	jmp     L0292
L01F5:	jsr     ldax0sp
	ina
	bne     L01F8
	inx
L01F8:	jsr     pushax
	ldx     #$01
	lda     #$98
	jmp     L0292
L01FB:	jsr     ldax0sp
	ina
	bne     L01FE
	inx
L01FE:	jsr     pushax
	ldx     #$01
	lda     #$B0
	jmp     L0292
L0201:	jsr     pushw0sp
	ldx     #$02
	lda     #$AE
	jmp     L0292
L0206:	jsr     ldax0sp
	ina
	bne     L0209
	inx
L0209:	jsr     pushax
	ldx     #$01
	lda     #$6B
	jmp     L0292
L020C:	jsr     ldax0sp
	ina
	bne     L020F
	inx
L020F:	jsr     pushax
	ldx     #$01
	lda     #$81
	jmp     L0292
L0212:	jsr     ldax0sp
	ina
	bne     L0215
	inx
L0215:	jsr     pushax
	ldx     #$01
	lda     #$98
	jmp     L0292
L0218:	jsr     ldax0sp
	ina
	bne     L021B
	inx
L021B:	jsr     pushax
	ldx     #$01
	lda     #$B0
	jmp     L0292
L021E:	jsr     ldax0sp
	ina
	bne     L0221
	inx
L0221:	jsr     pushax
	ldx     #$01
	lda     #$CA
	jmp     L0292
L0224:	jsr     ldax0sp
	ina
	bne     L0227
	inx
L0227:	jsr     pushax
	ldx     #$01
	lda     #$E5
	jmp     L0292
L022A:	jsr     ldax0sp
	ina
	jne     L029C
	inx
	jmp     L029C
L0230:	jsr     ldax0sp
	ina
	bne     L0233
	inx
L0233:	jsr     pushax
	ldx     #$02
	lda     #$20
	jmp     L0292
L0236:	jsr     ldax0sp
	ina
	bne     L0239
	inx
L0239:	jsr     pushax
	ldx     #$02
	lda     #$41
	jmp     L0292
L023C:	jsr     ldax0sp
	ina
	bne     L023F
	inx
L023F:	jsr     pushax
	ldx     #$02
	lda     #$63
	jmp     L0292
L0242:	jsr     ldax0sp
	ina
	bne     L0245
	inx
L0245:	jsr     pushax
	ldx     #$02
	lda     #$87
	bra     L0292
L0248:	jsr     ldax0sp
	ina
	bne     L024B
	inx
L024B:	jsr     pushax
	ldx     #$02
	lda     #$AE
	bra     L0292
L024E:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$6B
	bra     L0292
L0253:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$81
	bra     L0292
L0258:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$98
	bra     L0292
L025D:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$B0
	bra     L0292
L0262:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$CA
	bra     L0292
L0267:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$E5
	bra     L0292
L026C:	jsr     ldax0sp
	jsr     incax2
L029C:	jsr     pushax
	ldx     #$02
	txa
L0292:	jsr     _play
L0183:	ldy     #$02
L0299:	lda     (sp),y
	cmp     #$1B
	jne     L0171
	jsr     _opl2_init
	ldx     #$00
	txa
	jmp     incsp3

.endproc

