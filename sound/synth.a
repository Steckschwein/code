*=$1000
!source <defs.h.a>
!source <bios.h.a>
!source <ym3812.h.a>


!macro .oplSetReg .reg, .val {
	lda #.reg
	sta opl_stat
	; http://www.shipbrook.net/jeff/sb.html
	; The AdLib manual gives the wait times in microseconds: three point three (3.3) microseconds for the address, and twenty-three (23) microseconds for the data.
	; 3.300 ns / 0.25ns = 13.2 cycles / 2 = 6.6 NOPs

	jsr opl2_delay_register

	lda #.val
	sta opl_data
	; 23.000 ns / 0.25ns = 92 cycles / 92 = 46 NOPs
	; !for .i,1,46 {
	; 	nop
	; } 

	jsr opl2_delay_data
}

!macro .oplSetReg .reg {
	pha
	lda #.reg
	sta opl_stat
	; http://www.shipbrook.net/jeff/sb.html
	; The AdLib manual gives the wait times in microseconds: three point three (3.3) microseconds for the address, and twenty-three (23) microseconds for the data.
	; 3.300 ns / 0.25ns = 13.2 cycles / 2 = 6.6 NOPs

	jsr opl2_delay_register

	pla
	sta opl_data
	; 23.000 ns / 0.25ns = 92 cycles / 92 = 46 NOPs
	; !for .i,1,46 {
	; 	nop
	; } 
	jsr opl2_delay_data
}




	
; "init" opl2 by writing zeros into all registers

	ldx #$F5 ; until reg 245
-	stx opl_stat

	jsr opl2_delay_register


	stz opl_data

	jsr opl2_delay_data

	dex
	bne -
	
	

	+.oplSetReg $01, $20 ; enable waveform control

	+.oplSetReg $20, $01

	; Set the modulator's level to about 40 dB
	+.oplSetReg $40, $10

	; Modulator attack: quick; decay: long
	+.oplSetReg $60, $F0

	; Modulator sustain: medium; release: medium
	+.oplSetReg $80, $77

	; Set the carrier's multiple to 1
	+.oplSetReg $23, $01

	; Set the carrier to maximum volume (about 47 dB)
	+.oplSetReg $43, $00

	; Carrier attack: quick; decay: long
	+.oplSetReg $63, $F0

	; Carrier sustain: medium; release: medium
	+.oplSetReg $83, $77
	
	+.oplSetReg $e3, $04

	+PrintString .txt
-
	; jsr .shut_up
	jsr chrin
	cmp #'q'
	bne +
	lda #$ae
	ldx #$30
+	cmp #'w'
	bne +
	lda #$81
	ldx #$31
+	cmp #'e'
	bne +
	lda #$b0
	ldx #$31
+	cmp #'r'
	bne +
	lda #$ca
	ldx #$31
+	cmp #'t'
	bne +
	lda #$02
	ldx #$31
+	cmp #'z'
	bne +
	lda #$41
	ldx #$31
+	cmp #'u'
	bne +
	lda #$87
	ldx #$32
+	

	; Set the modulator's multiple to 1
	+.oplSetReg $A0
	txa
	; Turn the voice on; set the octave and freq MSB
	+.oplSetReg $B0

	jmp -



.shut_up
	+.oplSetReg $B0, $11
	rts


.txt
	!text "Orgel dir einen!",$0a,$0c,$00

!source <ym3812.a>


