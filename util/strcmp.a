 *=$1000

	jmp main

dirptr=$0

dir_entry_size=11

test_input=input_4

test_dir_tab
	!word dir_1
	!word dir_2
	!word dir_3
	!word dir_4
	!word dir_5

test_input_tab
	!word input_1
	!word input_2
	!word input_3
	!word input_4
	!word input_5
	!word input_6
	

main
	ldx #0
l1:
	lda test_dir_tab,x
	sta $0
	lda test_dir_tab+1,x
	sta $1
	phx
	jsr match	; check <name>.<ext> against 11 byte dir entry <name> <ext>
	plx	
		
	inx
	inx
	cpx	#10
	bne	l1
	
	rts

match:
	ldx #0
	ldy #0	
match_0
	lda test_input,x
	beq m_found	;eos?
	cmp #'*'
	beq m_n
	cmp #'?'
	beq m_1			; ? - skip compare, matches anything - note: multiple ? will end up in consuming the input string and at least and after 11 bytes
	cmp #'.'		;
	bne m_r

	inx	
	lda #' '		; '.' found in input, seek to dir entry ext offset
match_ext	
	cmp (dirptr),y
	bne match_0
	iny
	cpy #dir_entry_size
	beq	m_not_found
	bra	match_ext
	
m_r	cmp	#'a'		; regular char, match uppercase
	bcc m_r_match
	cmp #'z'
	bcs m_r_match
	and #$df		; uppercase
m_r_match	
	cmp (dirptr),y	; regular char, compare
	bne m_not_found
m_1	inx
	iny
	cpy #dir_entry_size
	bne match_0
	bra m_found	
	
m_n	inx
	cmp test_input,x	; skip read multiple '*'
	beq m_n
m_n1	
	lda (dirptr),y	; read 
	cmp #' '	; until ' '
	beq match_0	; go on, try match extension
m_n2	iny		
	cpy #dir_entry_size
	bne m_n1
m_found
	sec
 	rts
m_not_found
	clc
 	rts

dir_1	     !text "FILE00  TXT"
dir_2	     !text "LL      BIN"
dir_3	     !text "LS      BIN"
dir_4	     !text "LOADER  BIN"
dir_5	     !text "FILE04  TXT"

input_1 !text "ls.bin",0
input_2 !text "l*.bin",0
input_3 !text "l?.bin",0
input_4 !text "l**.bin",0
input_5 !text "l??.bin",0
input_6 !text "l??????.bin",0
