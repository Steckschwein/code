 	*=$1000

	jmp main

dirptr=$0

dir_entry_size=11

test_input=input_10

test_dir_tab
	.dw dir_1
	.dw dir_2
	.dw dir_3
	.dw dir_4
	.dw dir_5
	.dw dir_6
	.dw dir_7
test_dir_tab_e

test_input_tab
	.dw input_1
	.dw input_2
	.dw input_3
	.dw input_4
	.dw input_5
	.dw input_6
	

main
	ldx #0
l1:
	lda test_dir_tab,x
	sta $0
	lda test_dir_tab+1,x
	sta $1
	phx
	jsr match	; check <name>.<ext> against 11 byte dir entry <name> <ext>
	plx	
		
	inx
	inx
	cpx	#test_dir_tab_e-test_dir_tab
	bne	l1
	
	rts

match:
	ldx #0
	ldy #0	
match_0
	lda test_input,x
	beq m_found		;end of input, found
	cmp #'*'
	beq m_n
	cmp #'?'
	beq m_1			; ? - skip compare, matches anything - note: multiple ? will end up in consuming the input string char by char until ' '
	cmp #'.'		;
	bne m_r

	inx
	lda #' '		; '.' found in input, seek to dir entry extension offset
match_ext	
	cmp (dirptr),y
	bne match_0
match_ext_1
	iny
	cpy #dir_entry_size
	beq	m_not_found
	bra	match_ext
	
m_r	cmp	#'a'		; regular char, match uppercase
	bcc m_r_match
	cmp #'z'
	bcs m_r_match
	and #$df		; uppercase
m_r_match	
	cmp (dirptr),y	; regular char, compare
	bne m_not_found
m_1
	inx
	iny
	cpy #dir_entry_size
	bne match_0
	
	lda test_input,x	;input chars left?
	beq m_found
	bra m_not_found
	
m_n	inx
	cmp test_input,x	; skip read multiple '*'
	beq m_n
	
	lda #' '
m_n1
	cmp (dirptr),y		; until ' '
	beq match_ext_1		; then go on with skip until extension above
m_n2
	iny		
	cpy #dir_entry_size
	bne m_n1	; end of dir entry? found...
m_found
	sec
 	rts
m_not_found
	clc
 	rts

dir_1	     .ascii "FILE00  TXT"
dir_2	     .ascii "LL      BIN"
dir_3	     .ascii "LS      BIN"
dir_4	     .ascii "LOADER  BIN"
dir_5	     .ascii "FILE04  TXT"
dir_6	     .ascii "TEST    TXT"
dir_7	     .ascii "PROGS      "

input_1 	.ascii "ls.bin",0
input_2 	.ascii "l*.bin",0
input_3 	.ascii "l?.bin",0
input_4 	.ascii "l**.bin",0
input_5 	.ascii "l??.bin",0
input_6 	.ascii "l?????.bin",0
input_7 	.ascii "Ls.bin",0
input_8 	.ascii ".",0
input_9 	.ascii "..",0
input_10 	.ascii "test.txtfoobar",0
input_11 	.ascii "test.txt",0
input_12 	.ascii "progs",0