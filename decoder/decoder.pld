GAL22V10    ; first line : used GAL
8Bit Dekoder    ; second line: any text (max. 8 char.)

; PIN assignment
;
G1       ; A15 of 6502 (Pin 25)
A2       ; A14 of 6502 (Pin 24)
A1       ; A13 of 6502 (Pin 23)
A0       ; A12 of 6502 (Pin 22)
B0       ; A08 of 6502 (Pin 20)
B1       ; A09 of 6502 (Pin 19)
B2       ; A10 of 6502 (Pin 18)
B3       ; A11 of 6502 (Pin 17)
RW       ; RW of 6502 (Pin 34)
PHI2		;	System clock
NC
GND
;
ROMOFF	; Remove ROM from Adress space if low, make unterlying RAM readable
CSROM    ;CS signal for ROM at $e000-$ffff 
NC
NC
CSHIRAM  ;CS for ram between  $8000-$cfff
CSUART   ; CS for UART
CSVIA    ;6522 VIA    at $d100
ELCD     ;LCD-Display at $d200
VDPCSR   ;Read VDP at $d400
VDPCSW   ;Write VDP at $d500
CSVDP	 ; experimental
VCC
;
;  boolean expressions
;
/CSHIRAM = G1*/A2                       
         + G1*/A1*/A0
         + /RW*G1*A2*A1 				; Writes to $e000-$ffff go to the RAM
         + /ROMOFF*RW*G1*A2*A1			; Reads  to $e000-$ffff go to the RAM, IF ROMOFF is Low
/CSROM   = ROMOFF*RW*G1*A2*A1			; Reads  to $e000-$ffff go to the ROM, IF ROMOFF is High

/CSVIA   = G1 * A2*/A1*A0 * /B3*/B2*/B1*B0		; $d100

ELCD     = PHI2			* G1 * A2*/A1*A0 * /B3*/B2*B1*/B0	; $d200 - LCD-Display at $d200

; Variante	early CSW/CSR
;/VDPCSR  = RW* PHI2 	* G1*A2*/A1*A0  * /B3*B2*/B1*/B0	; $d400 - Video CSR     1101 0100 d400
;/VDPCSW  = /RW*PHI2	* G1*A2*/A1*A0  * /B3*B2*/B1*/B0	; $d400 - Video CSW     1101 0100 d400
/VDPCSR  = RW*  G1*A2*/A1*A0  * /B3*B2*/B1*/B0	; $d400 - Video CSR     1101 0100 d400
/VDPCSW  = /RW* G1*A2*/A1*A0  * /B3*B2*/B1*/B0	; $d400 - Video CSW     1101 0100 d400
/CSVDP  = G1*A2*/A1*A0  * /B3*B2*/B1*/B0	; $d400 - Video CSW     1101 0100 d400

/CSUART  = G1*A2*/A1*A0 * /B3*/B2*/B1*/B0

DESCRIPTION:
