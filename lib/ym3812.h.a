!ifdef ym3812_h_a !eof
ym3812_h_a = 1


!address {
	opl_stat = $0250        ; status register
	opl_sel  = opl_stat		; register select
	opl_data = opl_stat + 1 ; data register (write only)
} 


!macro snd_write r, v{
	ldy	r
	lda	v
	jsr	snd_sreg
}

!macro snd_nops{
	nop
	nop
	nop
	nop
}

!macro oplSetReg .reg, .val {
	lda #.reg
	sta opl_stat
	; http://www.shipbrook.net/jeff/sb.html
	; The AdLib manual gives the wait times in microseconds: three point three (3.3) microseconds for the address, and twenty-three (23) microseconds for the data.
	; 3.300 ns / 0.25ns = 13.2 cycles / 2 = 6.6 NOPs

	!for .i,1,7 {
		nop
	} 
	lda #.val
	sta opl_data
	; 23.000 ns / 0.25ns = 92 cycles / 92 = 46 NOPs
	; !for .i,1,46 {
	; 	nop
	; } 
	ldy #46
--	
	dey
	bne --

}

!macro oplSetReg .reg {
	pha
	lda #.reg
	sta opl_stat
	; http://www.shipbrook.net/jeff/sb.html
	; The AdLib manual gives the wait times in microseconds: three point three (3.3) microseconds for the address, and twenty-three (23) microseconds for the data.
	; 3.300 ns / 0.25ns = 13.2 cycles / 2 = 6.6 NOPs

	!for .i,1,7 {
		nop
	} 
	pla
	sta opl_data
	; 23.000 ns / 0.25ns = 92 cycles / 92 = 46 NOPs
	; !for .i,1,46 {
	; 	nop
	; } 
	ldy #46
--	
	dey
	bne --

}
