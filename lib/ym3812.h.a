!ifdef ym3812_h_a !eof
ym3812_h_a = 1


!address {
	opl_stat = $0250        ; status register
	opl_sel  = opl_stat		; register select
	opl_data = opl_stat + 1 ; data register (write only)
} 

;--------------------------------------------------------------------------------------------------------------
; For some of the parameters, there is one register per output channel. For those
; parameters, channel number can be used as an offset into the map. For many
; parameters, there is one register per operator. However, there are holes in the
; address map so that in this case, the operator number CANNOT be used as an
; offset. The operator offsets for those registers are (in hex form):
;--------------------------------------------------------------------------------------------------------------
opl2_op1 	= $00
opl2_op2 	= $01
opl2_op3 	= $02
opl2_op4 	= $03
opl2_op5 	= $04
opl2_op6 	= $05
opl2_op6 	= $05
opl2_op7 	= $08
opl2_op8 	= $09
opl2_op9 	= $0A
opl2_op10 	= $0B
opl2_op11 	= $0C
opl2_op12 	= $0D
opl2_op13 	= $10
opl2_op14 	= $11
opl2_op15 	= $12
opl2_op16 	= $13
opl2_op17 	= $14
opl2_op18 	= $15
;--------------------------------------------------------------------------------------------------------------
opl2_chan0_op1	= opl2_op1
opl2_chan0_op2	= opl2_op4

opl2_chan1_op1	= opl2_op2
opl2_chan1_op2	= opl2_op5

opl2_chan2_op1	= opl2_op3
opl2_chan2_op2	= opl2_op6

opl2_chan3_op1	= opl2_op7
opl2_chan3_op2	= opl2_op10

opl2_chan4_op1	= opl2_op8
opl2_chan4_op2	= opl2_op11

opl2_chan5_op1	= opl2_op9
opl2_chan5_op2	= opl2_op12

opl2_chan6_op1	= opl2_op13
opl2_chan6_op2	= opl2_op16

opl2_chan7_op1	= opl2_op14
opl2_chan7_op2	= opl2_op17

opl2_chan8_op1	= opl2_op15
opl2_chan8_op2	= opl2_op18
;--------------------------------------------------------------------------------------------------------------

!macro snd_write .r, .v{
 	ldy	#.r
 	lda	#.v
 	jsr	opl_sreg
}


!macro oplSetReg .reg, .val {
	lda #.reg
	sta opl_stat
	; http://www.shipbrook.net/jeff/sb.html
	; The AdLib manual gives the wait times in microseconds: three point three (3.3) microseconds for the address, and twenty-three (23) microseconds for the data.
	; 3.300 ns / 0.25ns = 13.2 cycles / 2 = 6.6 NOPs

	!for .i,1,7 {
		nop
	} 
	lda #.val
	sta opl_data
	; 23.000 ns / 0.25ns = 92 cycles / 92 = 46 NOPs
	; !for .i,1,46 {
	; 	nop
	; } 
	ldy #46
--	
	dey
	bne --

}

!macro oplSetReg .reg {
	pha
	lda #.reg
	sta opl_stat
	; http://www.shipbrook.net/jeff/sb.html
	; The AdLib manual gives the wait times in microseconds: three point three (3.3) microseconds for the address, and twenty-three (23) microseconds for the data.
	; 3.300 ns / 0.25ns = 13.2 cycles / 2 = 6.6 NOPs

	!for .i,1,7 {
		nop
	} 
	pla
	sta opl_data
	; 23.000 ns / 0.25ns = 92 cycles / 92 = 46 NOPs
	; !for .i,1,46 {
	; 	nop
	; } 
	ldy #46
--	
	dey
	bne --
}
