;----------------------------------------------------------------------------------------------	
; "init" opl2 by writing zeros into all registers
;----------------------------------------------------------------------------------------------
.init_opl2
	ldx #$F5 ; until reg 245
-	stx opl_stat

	!for .i,1,7 {
		nop
	} 

	stz opl_data

	ldy #46
--	
	dey
	bne --

	dex
	bne -
	
	rts

opl_sreg
    
    rts

;
;	return - C (carry) flag set - if an opl2 compatible chip is available
;
opl2_detect:
	+snd_write 4, $60
	+snd_write 4, $80
	ldy	opl_stat
	+snd_write 2, $ff
	+snd_write 4, $21
;  for(i=0;i<80;i++)			// wait for adlib
;    INP(adp);
;  stat2 = INP(adp);
    nop
    
	ldx	opl_stat
	+snd_write 4, $60
	+snd_write 4, $80
	tya
	and	#$e0
	beq	+
	txa
	and	#$e0
	cmp	#$c0
+	rts


; jsr here: 6 cycles
; rts back: 6 cycles

opl2_delay_data ; 23000ns / 0
!for .i,0,opl2_data_delay {
	nop
}
opl2_delay_register ; 3300 ns
!for .i,0,opl2_reg_delay {
	nop
}
	rts
