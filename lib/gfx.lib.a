!source <defs.h.a>
!src <t9929.h.a>

!macro setPixel .x, .y, .color{
	ldx	#.x
	ldy	#.y
	lda	#.color
	jsr	set_pixel
}

!macro drawLine .x1, .y1, x2, y2, .color{
	lda	#.x2
    sta tmp0
	lda	#.y2
    sta tmp1
    ldx #.x1
    ldy #.y1
	jsr	draw_line
}

;
; x - x-value
; y - y-value
; a - color
;
; VRAM ADDRESS = 8(INT(X DIV 8)) + 256(INT(Y DIV 8)) + (Y MOD 8)
set_pixel
	; low byte vram adress
	txa
.set_pixel_0
	and	#$f8
	sta	.adrl
	tya
	and	#$07
	ora	.adrl
	sta	.adrl	;safe vram low byte
	sta	a_vreg	;set vdp vram address low byte
	
	; high byte vram address - div 8, result is vram address "page" $0000, $0100, ...
	tya
	lsr
	lsr
	lsr
	sta	.adrh	;safe vram high byte
	sta	a_vreg	;set vdp vram address high byte
	
	txa			;set the appropriate bit 
	and	#$07
	tax
	lda	a_vram	;read current byte in vram and OR with new pixel
	ora	.bitmask,x
	tax
	
	lda	.adrl
	sta a_vreg
	lda	.adrh
	ora	#.WRITE_ADDRESS
	sta	a_vreg
	txa
	sta a_vram	;set vdp vram address high byte
	rts

.bitmask
	!byte $80,$40,$20,$10,$08,$04,$02,$01
	
draw_line
       
    jsr set_pixel
    cpx tmp0
;    bmi +
    
    
    txa
    clc
    sbc tmp0
    
	rts