;
; File generated by cc65 v 2.18 - Git 55528249
;
	.fopt		compiler,"cc65 v 2.18 - Git 55528249"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_abs
	.import		_kbhit
	.import		_vdp_screen
	.import		_vdp_plot
	.import		_vdp_blank
	.export		_mandelbrot
	.export		_main

.segment	"BSS"

_SCREEN_X:
	.res	2,$00
_SCREEN_Y:
	.res	1,$00
_SCREEN_Y2:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ mandelbrot (signed short, signed short, signed short, signed short)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_mandelbrot: near

.segment	"CODE"

	jsr     pushax
	ldy     #$13
	jsr     subysp
	ldy     #$16
	jsr     ldaxysp
	sec
	ldy     #$19
	sbc     (sp),y
	pha
	txa
	iny
	sbc     (sp),y
	tax
	pla
	jsr     pushax
	lda     _SCREEN_X
	ldx     _SCREEN_X+1
	jsr     tosudivax
	ldy     #$0A
	jsr     staxysp
	ldy     #$14
	jsr     ldaxysp
	sec
	ldy     #$17
	sbc     (sp),y
	pha
	txa
	iny
	sbc     (sp),y
	tax
	pla
	jsr     pushax
	lda     _SCREEN_Y
	jsr     tosudiva0
	ldy     #$08
	jsr     staxysp
	ldy     #$18
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
	lda     #$00
	ldy     #$01
L008A:	sta     (sp),y
	sec
	sbc     _SCREEN_Y2
	bcc     L0011
	jne     L000F
L0011:	ldy     #$09
	jsr     ldaxysp
	ldy     #$04
	jsr     addeqysp
	ldy     #$1A
	jsr     ldaxysp
	ldy     #$06
	jsr     staxysp
	ldx     #$00
	txa
	ldy     #$02
	jsr     staxysp
L001B:	ldy     #$05
	jsr     pushwysp
	lda     _SCREEN_X
	ldx     _SCREEN_X+1
	jsr     tosicmp
	jcs     L0010
	ldy     #$0B
	jsr     ldaxysp
	ldy     #$06
	jsr     addeqysp
	ldx     #$00
	txa
	ldy     #$11
	jsr     staxysp
	ldy     #$0D
	jsr     staxysp
	ldy     #$0C
L0089:	sta     (sp),y
	cmp     #$32
	jcs     L008E
	ldy     #$12
	jsr     ldaxysp
	jsr     _abs
	cmp     #$00
	txa
	sbc     #$20
	bvc     L0039
	eor     #$80
L0039:	jpl     L002B
	ldy     #$0E
	jsr     ldaxysp
	jsr     _abs
	cmp     #$00
	txa
	sbc     #$20
	bvc     L0040
	eor     #$80
L0040:	jpl     L002B
	ldy     #$12
	jsr     ldaxysp
	jsr     axlong
	jsr     pusheax
	ldy     #$16
	jsr     ldaxysp
	jsr     axlong
	jsr     tosmuleax
	txa
	ldx     sreg
	ldy     sreg+1
	sty     sreg
	cpy     #$80
	ldy     #$00
	bcc     L004B
	dey
L004B:	sty     sreg+1
	jsr     asreax4
	jsr     pusheax
	ldy     #$12
	jsr     ldaxysp
	jsr     axlong
	jsr     pusheax
	ldy     #$16
	jsr     ldaxysp
	jsr     axlong
	jsr     tosmuleax
	txa
	ldx     sreg
	ldy     sreg+1
	sty     sreg
	cpy     #$80
	ldy     #$00
	bcc     L0051
	dey
L0051:	sty     sreg+1
	jsr     asreax4
	jsr     tossubeax
	jsr     pusheax
	ldy     #$0B
	jsr     ldaxysp
	jsr     axlong
	jsr     tosaddeax
	ldy     #$0F
	jsr     staxysp
	ldy     #$12
	jsr     ldaxysp
	jsr     axlong
	jsr     pusheax
	ldy     #$12
	jsr     ldaxysp
	jsr     axlong
	jsr     tosmuleax
	txa
	ldx     sreg
	ldy     sreg+1
	sty     sreg
	cpy     #$80
	ldy     #$00
	bcc     L0058
	dey
L0058:	sty     sreg+1
	jsr     asreax3
	jsr     pusheax
	ldy     #$09
	jsr     ldaxysp
	jsr     axlong
	jsr     tosaddeax
	ldy     #$0D
	jsr     staxysp
	ldy     #$10
	jsr     ldaxysp
	ldy     #$11
	jsr     staxysp
	ldy     #$0C
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0089
L002B:	ldy     #$0C
L008E:	lda     (sp),y
	cmp     #$32
	beq     L001D
	asl     a
	asl     a
	sta     (sp)
	ldy     #$05
	jsr     pushwysp
	ldy     #$03
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	jsr     _vdp_plot
	ldy     #$05
	jsr     pushwysp
	ldx     #$00
	lda     _SCREEN_Y
	jsr     decax1
	sec
	ldy     #$03
	sbc     (sp),y
	pha
	txa
	sbc     #$00
	pla
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	jsr     _vdp_plot
L001D:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L001B
L0010:	ldy     #$01
	clc
	tya
	adc     (sp),y
	jmp     L008A
L000F:	ldy     #$1B
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	ldx     #$01
	stz     _SCREEN_X
	stx     _SCREEN_X+1
	lda     #$C0
	sta     _SCREEN_Y
	lsr     a
	sta     _SCREEN_Y2
	lda     #$07
	jsr     _vdp_screen
	lda     #$00
	jsr     _vdp_blank
	ldx     #$F0
	lda     #$00
	jsr     pushax
	jsr     pushax
	ldx     #$10
	jsr     pushax
	jsr     _mandelbrot
L0083:	jsr     _kbhit
	tax
	beq     L0083
	ldx     #$00
	txa
	rts

.endproc

