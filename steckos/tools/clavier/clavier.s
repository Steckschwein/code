;
; File generated by cc65 v 2.19 - Git 52e438792
;
	.fopt		compiler,"cc65 v 2.19 - Git 52e438792"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_strlen
	.import		_toupper
	.import		_cprintf
	.import		_cgetc
	.import		_opl2_write
	.import		_opl2_init
	.export		_snd01
	.export		_snd02
	.export		_snd03
	.export		_snd04
	.export		_snd05
	.export		_snd06
	.export		_snd07
	.export		_snd08
	.export		_sounds
	.export		_song_ix
	.export		_soundport
	.export		_adlibjam
	.export		_soundone
	.export		_soundall
	.export		_active
	.export		_play
	.export		_txt
	.export		_mapping
	.export		__sleep
	.export		_song
	.export		_play_song
	.export		_main

.segment	"DATA"

_snd01:
	.byte	$05
	.byte	$02
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$00
	.byte	$0B
	.byte	$04
	.byte	$04
	.byte	$06
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd02:
	.byte	$08
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$02
	.byte	$04
	.byte	$01
	.byte	$0D
	.byte	$0F
	.byte	$02
	.byte	$01
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
_snd03:
	.byte	$0F
	.byte	$03
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0F
	.byte	$04
	.byte	$02
	.byte	$05
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$01
_snd04:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd05:
	.byte	$0F
	.byte	$04
	.byte	$06
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$0F
	.byte	$03
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
_snd06:
	.byte	$0F
	.byte	$0B
	.byte	$07
	.byte	$00
	.byte	$02
	.byte	$03
	.byte	$00
	.byte	$01
	.byte	$0E
	.byte	$0F
	.byte	$03
	.byte	$06
	.byte	$04
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd07:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_snd08:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$02
	.byte	$03
	.byte	$05
	.byte	$00
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_sounds:
	.addr	_snd01
	.addr	_snd02
	.addr	_snd03
	.addr	_snd04
	.addr	_snd05
	.addr	_snd06
	.addr	_snd07
	.addr	_snd08
_song_ix:
	.byte	$00
_active:
	.word	$0000
_txt:
	.byte	$41,$64,$4C,$69,$62,$20,$43,$6C,$61,$76,$69,$65,$72,$20,$62,$79
	.byte	$20,$49,$6E,$64,$72,$65,$6B,$20,$50,$69,$6E,$73,$65,$6C,$20,$31
	.byte	$39,$39,$33,$24,$0A,$53,$74,$65,$63,$6B,$73,$63,$68,$77,$65,$69
	.byte	$6E,$20,$70,$6F,$72,$74,$20,$6F,$6E,$20,$31,$32,$2F,$32,$31,$2F
	.byte	$32,$30,$31,$38,$0A,$50,$6C,$61,$79,$20,$6E,$6F,$77,$20,$6F,$72
	.byte	$20,$70,$72,$65,$73,$73,$20,$45,$53,$43,$20,$74,$6F,$20,$65,$78
	.byte	$69,$74,$2E,$2E,$2E,$20,$24,$0A,$50,$6C,$61,$79,$20,$6F,$6E,$20
	.byte	$74,$68,$65,$73,$65,$20,$6B,$65,$79,$73,$3A,$0A,$0A,$75,$70,$70
	.byte	$65,$72,$20,$6D,$61,$6E,$75,$61,$6C,$3A,$0A,$0A,$6C,$6F,$77,$65
	.byte	$72,$20,$6D,$61,$6E,$75,$61,$6C,$3A,$0A,$0A,$20,$20,$64,$20,$65
	.byte	$20,$20,$20,$66,$20,$61,$20,$62,$20,$20,$20,$64,$20,$65,$0A,$20
	.byte	$43,$20,$44,$20,$45,$20,$46,$20,$47,$20,$41,$20,$42,$20,$43,$20
	.byte	$44,$20,$45,$0A,$0A,$43,$72,$73,$55,$70,$20,$43,$72,$73,$44,$6F
	.byte	$77,$6E,$20,$2D,$20,$63,$68,$6F,$6F,$73,$65,$20,$6F,$63,$74,$61
	.byte	$76,$65,$0A,$53,$68,$69,$66,$74,$20,$31,$20,$2E,$2E,$2E,$20,$37
	.byte	$20,$2D,$20,$63,$68,$6F,$6F,$73,$65,$20,$73,$6F,$75,$6E,$64,$00
_song:
	.addr	S0002

.segment	"RODATA"

S0002:
	.byte	$67,$67,$65,$67,$67,$65,$67,$66,$64,$66,$65,$67,$67,$65,$67,$67
	.byte	$65,$67,$66,$64,$66,$65,$65,$64,$64,$64,$66,$66,$66,$65,$65,$65
	.byte	$41,$41,$67,$67,$67,$43,$67,$65,$67,$66,$64,$63,$00
S0003:
	.byte	$25,$73,$00

; ---------------------------------------------------------------
; void __near__ soundport (char index, char value)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_soundport: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _opl2_write
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ adlibjam (unsigned char c)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_adlibjam: near

.segment	"CODE"

	jsr     pusha
	ldx     #$00
	lda     (sp)
	cmp     #$03
	bcs     L0006
	bra     L0001
L0006:	lda     (sp)
	cmp     #$06
	bcs     L0008
	clc
	adc     #$05
	bra     L0001
L0008:	lda     (sp)
	ldy     #$0A
	jsr     incaxy
	ldx     #$00
L0001:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ soundone (unsigned char ch, char ar0, char dr0, char sl0, char rr0, char ml0, char ks0, char tl0, char ws0, char avek0, char ar1, char dr1, char sl1, char rr1, char ml1, char ks1, char tl1, char ws1, char avek1, char fb, char c)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_soundone: near

.segment	"CODE"

	jsr     pusha
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$C0
	jsr     incaxy
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	lda     (sp),y
	jsr     _adlibjam
	ldy     #$14
	sta     (sp),y
	ldx     #$00
	lda     (sp),y
	ldy     #$60
	jsr     incaxy
	jsr     pusha
	ldy     #$14
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$80
	jsr     incaxy
	jsr     pusha
	ldy     #$12
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$20
	jsr     incaxy
	jsr     pusha
	ldy     #$0C
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	ldy     #$10
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$40
	jsr     incaxy
	jsr     pusha
	ldy     #$0F
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$E0
	jsr     incaxy
	jsr     pusha
	ldy     #$0D
	lda     (sp),y
	jsr     _soundport
	ldy     #$14
	clc
	lda     #$03
	adc     (sp),y
	sta     (sp),y
	ldx     #$00
	lda     (sp),y
	ldy     #$60
	jsr     incaxy
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$80
	jsr     incaxy
	jsr     pusha
	ldy     #$09
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$20
	jsr     incaxy
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	ldy     #$07
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$40
	jsr     incaxy
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	asl     a
	sta     ptr1
	dey
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	ldy     #$14
	ldx     #$00
	lda     (sp),y
	ldy     #$E0
	jsr     incaxy
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     _soundport
	ldy     #$15
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ soundall (unsigned char *snd)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_soundall: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp2
	ldx     #$00
	txa
	jsr     stax0sp
L0002:	jsr     ldax0sp
	cmp     #$09
	txa
	sbc     #$00
	bvc     L0006
	eor     #$80
L0006:	jpl     L0003
	lda     (sp)
	jsr     pusha
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$05
	jsr     ldaxysp
	ina
	bne     L0007
	inx
L0007:	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$06
	jsr     ldaxysp
	jsr     incax2
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$07
	jsr     ldaxysp
	jsr     incax3
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$08
	jsr     ldaxysp
	jsr     incax4
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$09
	jsr     ldaxysp
	jsr     incax5
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$0A
	jsr     ldaxysp
	jsr     incax6
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$0B
	jsr     ldaxysp
	jsr     incax7
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$0C
	jsr     ldaxysp
	jsr     incax8
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$0D
	jsr     ldaxysp
	ldy     #$09
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$0E
	jsr     ldaxysp
	ldy     #$0A
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$0F
	jsr     ldaxysp
	ldy     #$0B
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$10
	jsr     ldaxysp
	ldy     #$0C
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$11
	jsr     ldaxysp
	ldy     #$0D
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$12
	jsr     ldaxysp
	ldy     #$0E
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$13
	jsr     ldaxysp
	ldy     #$0F
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$14
	jsr     ldaxysp
	ldy     #$10
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$15
	jsr     ldaxysp
	ldy     #$11
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$16
	jsr     ldaxysp
	ldy     #$12
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha
	ldy     #$17
	jsr     ldaxysp
	ldy     #$13
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     _soundone
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jmp     L0002
L0003:	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ play (unsigned int octave, unsigned int freq)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_play: near

.segment	"CODE"

	jsr     pushax
	lda     _active
	ldx     _active+1
	ldy     #$B0
	jsr     incaxy
	jsr     pusha
	lda     #$00
	jsr     _soundport
	lda     _active
	ldx     _active+1
	ldy     #$A0
	jsr     incaxy
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _soundport
	lda     _active
	ldx     _active+1
	ldy     #$B0
	jsr     incaxy
	jsr     pusha
	ldy     #$04
	jsr     ldaxysp
	jsr     shlax2
	ldy     #$20
	jsr     incaxy
	sta     ptr1
	ldy     #$02
	lda     (sp),y
	clc
	adc     ptr1
	jsr     _soundport
	lda     _active
	ldx     _active+1
	ina
	bne     L0002
	inx
L0002:	jsr     pushax
	lda     #$09
	jsr     tosumoda0
	sta     _active
	stx     _active+1
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ mapping (unsigned char note)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_mapping: near

.segment	"CODE"

	jsr     pusha
	ldx     #$00
	lda     (sp)
	cmp     #$41
	beq     L0013
	cmp     #$42
	beq     L0014
	cmp     #$43
	beq     L0015
	cmp     #$44
	beq     L0016
	cmp     #$45
	beq     L0017
	cmp     #$63
	beq     L000E
	cmp     #$64
	beq     L000F
	cmp     #$65
	beq     L0010
	cmp     #$66
	beq     L0011
	cmp     #$67
	beq     L0012
	bra     L0018
L000E:	lda     #$79
	bra     L0001
L000F:	lda     #$78
	bra     L0001
L0010:	lda     #$63
	bra     L0001
L0011:	lda     #$76
	bra     L0001
L0012:	lda     #$62
	bra     L0001
L0013:	lda     #$6E
	bra     L0001
L0014:	lda     #$6D
	bra     L0001
L0015:	lda     #$2C
	bra     L0001
L0016:	lda     #$2E
	bra     L0001
L0017:	lda     #$2D
	bra     L0001
L0018:	txa
L0001:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ _sleep (unsigned char s)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	__sleep: near

.segment	"CODE"

	jsr     pusha
	ldx     #$20
	lda     #$00
	jsr     push0ax
	bra     L0004
L0005:	ldx     #$00
	lda     #$01
	jsr     lsubeq0sp
L0007:	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stz     sreg
	stz     sreg+1
	txa
	jsr     tosneeax
	bne     L0005
	ldy     #$04
	lda     (sp),y
	sec
	sbc     #$01
	sta     (sp),y
L0004:	ldy     #$04
	lda     (sp),y
	bne     L0007
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ play_song (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_play_song: near

.segment	"CODE"

	lda     _song_ix
	jsr     pusha0
	lda     _song
	ldx     _song+1
	jsr     _strlen
	jsr     tosicmp
	bne     L0002
	lda     #$00
	stz     _song_ix
	tax
	rts
L0002:	lda     _song_ix
	inc     _song_ix
	clc
	adc     _song
	ldx     _song+1
	bcc     L0003
	inx
L0003:	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jmp     _mapping

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     decsp1
	lda     #$03
	jsr     pusha0
	jsr     _opl2_init
	lda     #<(_snd01)
	ldx     #>(_snd01)
	jsr     _soundall
	lda     #<(S0003)
	ldx     #>(S0003)
	jsr     pushax
	lda     #<(_txt)
	ldx     #>(_txt)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
L0002:	jsr     _cgetc
	ldy     #$02
	sta     (sp),y
	lda     _song_ix
	bne     L004D
	lda     (sp),y
	cmp     #$50
	beq     L004D
	ldx     #$00
	bra     L004F
L004D:	jsr     _play_song
	ldy     #$02
	sta     (sp),y
	lda     #$01
	jsr     __sleep
	bra     L0008
L004F:	lda     (sp),y
	jsr     _toupper
	ldy     #$02
	sta     (sp),y
L0008:	ldy     #$02
	ldx     #$00
	lda     (sp),y
	cmp     #$15
	jeq     L0015
	cmp     #$1E
	jeq     L000D
	cmp     #$1F
	jeq     L000B
	cmp     #$21
	jeq     L0051
	cmp     #$22
	jeq     L0051
	cmp     #$24
	jeq     L0051
	cmp     #$25
	jeq     L0051
	cmp     #$26
	jeq     L0051
	cmp     #$27
	jeq     L004A
	cmp     #$2B
	jeq     L004B
	cmp     #$2C
	jeq     L0023
	cmp     #$2D
	jeq     L002A
	cmp     #$2E
	jeq     L0026
	cmp     #$2F
	jeq     L0016
	cmp     #$30
	jeq     L0047
	cmp     #$32
	jeq     L002D
	cmp     #$33
	jeq     L0031
	cmp     #$35
	jeq     L0037
	cmp     #$36
	jeq     L003B
	cmp     #$37
	jeq     L003F
	cmp     #$39
	jeq     L0045
	cmp     #$42
	jeq     L001E
	cmp     #$43
	jeq     L001B
	cmp     #$44
	jeq     L001A
	cmp     #$45
	jeq     L0033
	cmp     #$47
	jeq     L001D
	cmp     #$48
	jeq     L001F
	cmp     #$49
	jeq     L0043
	cmp     #$4A
	jeq     L0021
	cmp     #$4C
	jeq     L0024
	cmp     #$4D
	jeq     L0022
	cmp     #$4E
	jeq     L0020
	cmp     #$4F
	jeq     L0046
	cmp     #$50
	jeq     L0048
	cmp     #$51
	jeq     L002C
	cmp     #$52
	jeq     L0035
	cmp     #$53
	jeq     L0018
	cmp     #$54
	jeq     L0039
	cmp     #$55
	jeq     L0041
	cmp     #$56
	jeq     L001C
	cmp     #$57
	jeq     L002F
	cmp     #$58
	jeq     L0019
	cmp     #$59
	beq     L0017
	cmp     #$5A
	jeq     L003D
	cmp     #$81
	jeq     L0049
	cmp     #$94
	jeq     L0028
	jmp     L0053
L000B:	jsr     ldax0sp
	cmp     #$02
	txa
	sbc     #$00
	jcc     L000A
	ldx     #$00
	lda     #$01
	jsr     subeq0sp
	jmp     L000A
L000D:	dey
	lda     (sp),y
	cmp     #$00
	bne     L000F
	lda     (sp)
	cmp     #$05
L000F:	jcs     L000A
	tya
	jsr     addeq0sp
	jmp     L000A
L0051:	lda     (sp),y
	ldy     #$21
	jsr     decaxy
	jsr     aslax1
	clc
	adc     #<(_sounds)
	tay
	txa
	adc     #>(_sounds)
	tax
	tya
	jsr     ldaxi
	jsr     _soundall
	jmp     L000A
L0015:	lda     _sounds+4
	ldx     _sounds+4+1
	jsr     _soundall
	jmp     L000A
L0016:	lda     _sounds+14
	ldx     _sounds+14+1
	jsr     _soundall
	jmp     L000A
L0017:	jsr     ldax0sp
	jsr     decax1
	jsr     pushax
	ldx     #$02
	lda     #$AE
	jmp     L004C
L0018:	jsr     pushw0sp
	ldx     #$01
	lda     #$6B
	jmp     L004C
L0019:	jsr     pushw0sp
	ldx     #$01
	lda     #$81
	jmp     L004C
L001A:	jsr     pushw0sp
	ldx     #$01
	lda     #$98
	jmp     L004C
L001B:	jsr     pushw0sp
	ldx     #$01
	lda     #$B0
	jmp     L004C
L001C:	jsr     pushw0sp
	ldx     #$01
	lda     #$CA
	jmp     L004C
L001D:	jsr     pushw0sp
	ldx     #$01
	lda     #$E5
	jmp     L004C
L001E:	jsr     ldax0sp
	jmp     L0056
L001F:	jsr     pushw0sp
	ldx     #$02
	lda     #$20
	jmp     L004C
L0020:	jsr     pushw0sp
	ldx     #$02
	lda     #$41
	jmp     L004C
L0021:	jsr     pushw0sp
	ldx     #$02
	lda     #$63
	jmp     L004C
L0022:	jsr     pushw0sp
	ldx     #$02
	lda     #$87
	jmp     L004C
L0023:	jsr     pushw0sp
	ldx     #$02
	lda     #$AE
	jmp     L004C
L0024:	jsr     ldax0sp
	ina
	bne     L0025
	inx
L0025:	jsr     pushax
	ldx     #$01
	lda     #$6B
	jmp     L004C
L0026:	jsr     ldax0sp
	ina
	bne     L0027
	inx
L0027:	jsr     pushax
	ldx     #$01
	lda     #$81
	jmp     L004C
L0028:	jsr     ldax0sp
	ina
	bne     L0029
	inx
L0029:	jsr     pushax
	ldx     #$01
	lda     #$98
	jmp     L004C
L002A:	jsr     ldax0sp
	ina
	bne     L002B
	inx
L002B:	jsr     pushax
	ldx     #$01
	lda     #$B0
	jmp     L004C
L002C:	jsr     pushw0sp
	ldx     #$02
	lda     #$AE
	jmp     L004C
L002D:	jsr     ldax0sp
	ina
	bne     L002E
	inx
L002E:	jsr     pushax
	ldx     #$01
	lda     #$6B
	jmp     L004C
L002F:	jsr     ldax0sp
	ina
	bne     L0030
	inx
L0030:	jsr     pushax
	ldx     #$01
	lda     #$81
	jmp     L004C
L0031:	jsr     ldax0sp
	ina
	bne     L0032
	inx
L0032:	jsr     pushax
	ldx     #$01
	lda     #$98
	jmp     L004C
L0033:	jsr     ldax0sp
	ina
	bne     L0034
	inx
L0034:	jsr     pushax
	ldx     #$01
	lda     #$B0
	jmp     L004C
L0035:	jsr     ldax0sp
	ina
	bne     L0036
	inx
L0036:	jsr     pushax
	ldx     #$01
	lda     #$CA
	jmp     L004C
L0037:	jsr     ldax0sp
	ina
	bne     L0038
	inx
L0038:	jsr     pushax
	ldx     #$01
	lda     #$E5
	jmp     L004C
L0039:	jsr     ldax0sp
	ina
	jne     L0056
	inx
	jmp     L0056
L003B:	jsr     ldax0sp
	ina
	bne     L003C
	inx
L003C:	jsr     pushax
	ldx     #$02
	lda     #$20
	jmp     L004C
L003D:	jsr     ldax0sp
	ina
	bne     L003E
	inx
L003E:	jsr     pushax
	ldx     #$02
	lda     #$41
	jmp     L004C
L003F:	jsr     ldax0sp
	ina
	bne     L0040
	inx
L0040:	jsr     pushax
	ldx     #$02
	lda     #$63
	jmp     L004C
L0041:	jsr     ldax0sp
	ina
	bne     L0042
	inx
L0042:	jsr     pushax
	ldx     #$02
	lda     #$87
	bra     L004C
L0043:	jsr     ldax0sp
	ina
	bne     L0044
	inx
L0044:	jsr     pushax
	ldx     #$02
	lda     #$AE
	bra     L004C
L0045:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$6B
	bra     L004C
L0046:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$81
	bra     L004C
L0047:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$98
	bra     L004C
L0048:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$B0
	bra     L004C
L0049:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$CA
	bra     L004C
L004A:	jsr     ldax0sp
	jsr     incax2
	jsr     pushax
	ldx     #$01
	lda     #$E5
	bra     L004C
L004B:	jsr     ldax0sp
	jsr     incax2
L0056:	jsr     pushax
	ldx     #$02
	txa
L004C:	jsr     _play
L000A:	ldy     #$02
L0053:	lda     (sp),y
	cmp     #$1B
	jne     L0002
	jsr     _opl2_init
	ldx     #$00
	txa
	jmp     incsp3

.endproc

