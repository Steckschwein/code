 	*=$1000
test_in=input_15
test_dirs=13
test_input=test_in + test_dirs; address of input + size of results


dirptr=$0
fd_area						= $0320 ; File descriptor area until $0350 
FD_Entries_Max = 16
FD_Entry_Size = 9 ; 9 byte per fd entry
krn_tmp=$ee


	jmp	test_suite

	.include "../../../asmunit/asm_unit.asm"
	.include "../matcher.asm"
	
buffer:			.rs 8+1+3
filename_buf: 	.rs 32

vdp_chrout:
	sta	$e001
	rts

	
test_suite
	lda #<test_in
	sta $10
	lda #>test_in
	sta $10+1
	
	ldx #2
	lda $10, x
	sta $4
ll1:	dec $4
	bpl ll1
	

    lda #<test_input
    sta matcher_prepareinput+1
    sta matcher_test1+1
    lda #>test_input
    sta matcher_prepareinput+2
    sta matcher_test1+2
    
    lda #<test_in
    sta a5+1
    lda #>test_in
    sta a5+2
    
    jsr test
	
	rts
	
test
	
	ldx #0	
	ldy #0
	
l1:
	lda test_dir_tab,x
	sta dirptr
	lda test_dir_tab+1,x
	sta dirptr+1
		
	phx
	phy
	jsr matcher	; check <name>.<ext> against 11 byte dir entry <name> <ext>
	ply
	plx		
	lda	#0
	rol			;result in carry to bit 0	
a5	cmp	test_input, y
	bne	test_failed	
	
	jsr	_test_ok
next:	
	iny
	inx
	inx
	cpx	#test_dir_tab_e-test_dir_tab
	bne	l1	
	rts
test_failed
	;failed with 'y'
	jsr	_test_failed
	bra	next
		
dir_1:	     .ascii "A       TXT"
dir_2:	     .ascii "LL      PRG"	;2
dir_3:	     .ascii "LS      PRG"	;4
dir_4:	     .ascii "LOADER  PRG"	;6
dir_5:	     .ascii "FIBONACIPRG"	;8
dir_6:	     .ascii "TESTZME TXT"	;10
dir_7:	     .ascii "PROGS      "	;12
dir_8:	     .ascii ".          "	;14
dir_9:	     .ascii "..         "	;16
dir_10:	     .ascii ".SSH       "	;18
dir_11:	     .ascii "..FOO      "	;20
dir_12:	     .ascii "1          "	;22
dir_13:	     .ascii "LIST0001DB "	;24

input_1: 	.db 0,0,1,0,0,0,0,0,0,0,0,0,0 ;expected result - 0 - no match, 1 - match - eg. 0,0,1 mean matches "LS        PRG" from dir_3
			.db "ls.prg",0        	;user input
input_2: 	.db 0,1,1,1,0,0,0,0,0,0,0,0,0
			.db "l*.prg",0
input_3: 	.db 0,1,1,0,0,0,0,0,0,0,0,0,0
			.db "l?.prg",0
input_4: 	.db 0,1,1,1,0,0,0,0,0,0,0,0,0
			.db "l**.prg",0
input_5: 	.db 0,1,1,0,0,0,0,0,0,0,0,0,0
			.db "l??.prg",0
input_6: 	.db 0,1,1,1,0,0,0,0,0,0,0,0,0
			.db "l?????.PRG",0
input_7: 	.db 0,0,1,0,0,0,0,0,0,0,0,0,0
			.db "Ls.PrG",0
input_8: 	.db 0,0,0,0,0,0,0,1,0,0,0,0,0
			.db ".",0
input_9: 	.db 0,0,0,0,0,0,0,0,1,0,0,0,0
			.db "..",0
input_10: 	.db 1,1,1,1,1,1,1,1,1,1,1,1,1
			.db "*.*",0
input_11: 	.db 0,0,0,0,0,1,0,0,0,0,0,0,0
			.db "testzme.txt",0
input_12: 	.db 0,0,0,0,0,0,1,0,0,0,0,0,0
			.db "progs",0
input_13: 	.db 0,0,0,0,0,0,0,0,0,1,0,0,0
			.db ".ssh",0
input_14: 	.db 0,0,0,0,0,0,0,0,0,0,1,0,0
			.db "..foo",0
input_15: 	.db 0,1,1,1,0,0,0,0,0,0,0,0,1
			.db "l*.*",0
input_16: 	.db 1,0,0,0,0,0,0,0,0,0,0,0,0
			.db "a.*",0
input_17: 	.db 0,1,1,1,0,0,0,0,0,0,0,0,0
			.db "l*.p*",0
input_18: 	.db 0,0,1,0,0,0,0,0,0,0,0,0,0
			.db "ls",0
input_19: 	.db 0,0,0,0,0,0,0,0,0,0,0,1,0
			.db "1",0
input_20: 	.db 0,1,1,1,1,0,0,0,0,0,0,0,0
			.db "*.prg",0
input_21: 	.db 0,0,0,0,1,0,0,0,0,0,0,0,0
			.db "FIBONACI.PRG",0
input_22: 	.db 0,0,0,0,1,0,0,0,0,0,0,0,0
			.db "FI*ONAI*.P*G",0
input_23: 	.db 0,1,1,1,0,0,0,0,0,0,0,0,1
			.db "l*",0
input_24: 	.db 0,0,1,0,0,0,0,0,0,0,0,0,0
			.db "ls*",0


test_dir_tab
	.dw dir_1
	.dw dir_2
	.dw dir_3
	.dw dir_4
	.dw dir_5
	.dw dir_6
	.dw dir_7
	.dw dir_8
	.dw dir_9
	.dw dir_10
	.dw dir_11
	.dw dir_12
	.dw dir_13
test_dir_tab_e