SYMBOLS{

	#kernel start address
	kernel_start: type=export, value=$e800;
}

MEMORY
{
    ZP:         start=$0,   size=$100, type=rw, define=no;
    ZPEXT:      start=$0280, size=$80, type=rw, define=no;
    RAM:        start=$1000, size=$c800, type=rw, define=yes;
    OS_RAM:     start=$df00, size=$0900, type=rw, define=yes, fill=no;
    KERNEL_RAM: start=kernel_start, size=$1800, type=rw, define=yes, fill=no, file=%O;
}

SEGMENTS
{
    ZEROPAGE: load=ZP, type=zp;
    LOADER:   load=RAM, type=rw;
    DATA:     load=RAM, type = rw, define = yes, align = $100;
    BSS:      load=OS_RAM, type=bss, optional=yes;
    CODE:     load=KERNEL_RAM, type=rw;
    JUMPTABLE:load=KERNEL_RAM, type=rw, start=$ff7a, optional=yes;
    VECTORS:  load=KERNEL_RAM, type=ro, start=$fffa, optional=yes;
}
