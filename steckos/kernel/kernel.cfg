SYMBOLS{
	#kernel start address
	kernel_start: type=export, value=$e000;
}

MEMORY
{
    # $e0-$xx are fixed locations - @see zeropage.inc
    ZP:         start=$f1,   size=$0f, type=rw, define=no;
    ZPEXT:      start=$0280, size=$80, type=rw, define=no;
    RAM:        start=$1000, size=kernel_start-__RAM_START__, type=rw, define=yes;
    KERNEL_RAM: start=kernel_start, size=$10000-kernel_start, type=rw, define=yes, fill=no, file=%O;
}

SEGMENTS
{
    ZEROPAGE: load=ZP, type=zp;
    DATA:     load=RAM, type = rw, define = yes, align = $100;
    CODE:     load=KERNEL_RAM, type=rw;

    # NOTE: we use type=rw here and NOT type=bss, cause we need an memory image of the kernel with fixed size
    BSS:      load=KERNEL_RAM, type=rw, define = yes, optional=yes;
    JUMPTABLE:load=KERNEL_RAM, type=rw, start=$ff7a, optional=yes;
    VECTORS:  load=KERNEL_RAM, type=ro, start=$fff8, optional=yes;
}
