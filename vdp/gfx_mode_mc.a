;
;	gfx multi color mode - 64x48 blocks with 4x4px per block, 15 colors + transparent
;
!src <defs.h.a>
!source <t9929.h.a>

*=$1000
	jsr	vdp_display_off			;display off
	jsr vdp_mode_sprites_off	;sprites off

;	0,0 - 
;	1,0 - 0 and 3 <<1 = 0

	lda	#<ADDRESS_GFX_MC_SCREEN
	ldy	#.WRITE_ADDRESS+ >ADDRESS_GFX_MC_SCREEN
	+vdp_sreg
	stz tmp0
	lda #32
	sta tmp1
---	ldy #0
--	ldx	tmp0
-	+vnops
	stx a_vram
	inx
	cpx	tmp1
	bne	-
	iny
	cpy #4
	bne	--
	cpx	#32*6
	beq +
	stx tmp0	; next 
	clc
	txa
	adc #32
	sta tmp1
	bra ---
+

	jsr blank
	
	;jsr load_gfx
	lda #47
	sta tmp2
-	ldx tmp2
	ldy tmp2
	lda #Cyan
	jsr set_pixel_mc
	lda tmp2
	tax
	ldy #24
	lda #Dark_Blue
	jsr set_pixel_mc
	dec tmp2
	bpl -
	
	jsr vdp_mode_gfx_mc			;enable gfx3 mode

-	jmp	-

blank:
	stz	adrl
	lda	#<ADDRESS_GFX_MC_PATTERN
	ldy	#.WRITE_ADDRESS+ >ADDRESS_GFX_MC_PATTERN
	ldx #1536/256
	jmp vdp_fill
	
load_gfx:
	+SetVector .pattern, addr
	lda	#<ADDRESS_GFX_MC_PATTERN
	ldy	#.WRITE_ADDRESS+ >ADDRESS_GFX_MC_PATTERN
	ldx #1536/256
	jsr vdp_memcpy

coltab:
	!byte $10,$20,$30,$40,$50,$60,$70,$80,$90,$a0,$b0,$c0,$d0,$e0,$f0
	
;	X - x coordinate [0..3f]
;	Y - y coordinate [0..2f]
;	A - color [0..f]
;
; 	VRAM ADDRESS = 8(INT(X DIV 2)) + 256(INT(Y DIV 8)) + (Y MOD 8)
set_pixel_mc:
	and #$0f
	sta tmp0	;safe color
	
	txa			
	and #$3e	; x div 2 * 8 => and, asl, asl
	asl
	asl
	sta adrl
	
	tya
	and	#$07	; y mod 8
	ora	adrl
	sta	a_vreg				;4 set vdp vram address low byte
	sta	adrl				;3 safe vram address low byte
	
	; high byte vram address - div 8, result is vram address "page" $0000, $0100, ... until $05ff
	tya						;2
	lsr						;2
	lsr						;2
	lsr						;2
	sta	a_vreg				;set vdp vram address high byte
	ora #.WRITE_ADDRESS		;2 adjust for write
	tay	;adrh				;2 safe vram high byte for write

    txa						;2
	bit #1					;3 test color shift required, upper nibble?
	beq l1					;2/3
	nop						;2
	lda #$f0				;2
	and a_vram				;4
	bra l2					;3
l1:	lda tmp0
	asl						;2
	asl						;2
	asl						;2
	asl
	sta tmp0
	lda a_vram
	and #$0f				;2
l2:	
	ora tmp0				;3
	nop						;2
	nop						;2
	nop						;2
	ldx adrl				;3
	stx	a_vreg				;4 setup write adress
	nop						;2
	nop						;2
	nop						;2
	sty a_vreg
	+vnops
	sta a_vram
	
	rts


	lda	#<ADDRESS_GFX_MC_PATTERN
	ldy	#.WRITE_ADDRESS+ >ADDRESS_GFX_MC_PATTERN
	+vdp_sreg
	lda #Cyan<<4|Dark_Green
	sta a_vram
	+vnops
	sta a_vram

!src <t99xx.lib.a>

.pattern
;!bin "test/MODE3.TIAP"
;!bin "test/PM112012.TIAP"