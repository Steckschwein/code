*=$1000
!src "../bios/defs.h.a"
!src "../bios/via.h.a"
!src "../bios/bios.h.a"
!src "../vdp/t9929.h.a"

tsec = tmp6
tmin = tmp5
thou = tmp4
tday = tmp3
tmon = tmp2
tyea = tmp1
	jmp main
!fill $1000-$1f6, $ea
main
	;lda #dev_vdp
    stz chn_out
    sei
 	;   Set IRQ Vector
 	+SetVector isr, irqvec

 	lda	#v_reg1_16k|v_reg1_display_on|v_reg1_int
	ldy	#v_reg1
	jsr	vdp_sreg
   
   	lda #50
	sta tmp7

	jsr lcdclear

	lda #24
	sta crs_x
	stz crs_y

	+PrintString time_mask

	lda #24
	sta crs_x
	lda #1
	sta crs_y
	; ldx #$00
	; ldy #$02
	; jsr lcdxy
	+PrintString date_mask


	jsr rtc_enable
	lda #$8f
	jsr spi_rw_byte
	lda #$00
	jsr spi_rw_byte
	jsr rtc_disable

	; jsr rtc_enable
	; lda #$87
	; jsr spi_rw_byte
	; lda #$81
	; jsr spi_rw_byte
	; lda #$80
	; jsr spi_rw_byte
	; lda #$80
	; jsr spi_rw_byte
	; lda #$80
	; jsr spi_rw_byte
	; jsr rtc_disable

	cli
	; jsr read

-	jmp -

isr
	pha
	phy
	phx

	bit	a_vreg ; Check VDP interrupt. IRQ is acknowledged by reading.
	bpl +	   ; VDP IRQ flag set? 

	dec tmp7
	bne +

	lda #50
	sta tmp7

	lda #24
	sta crs_x
	stz crs_y

	; jsr read
	jsr rtc_enable
    lda #$00
   	jsr spi_rw_byte

    jsr spi_r_byte
    sta tsec
    jsr spi_r_byte
    sta tmin
    jsr spi_r_byte
    sta thou

    jsr spi_r_byte

    jsr spi_r_byte
    sta tday
    jsr spi_r_byte
    sta tmon
    jsr spi_r_byte
    sta tyea
	jsr rtc_disable


	lda thou
	jsr hexout

	inc crs_x

	lda tmin
	jsr hexout

	inc crs_x
	lda tsec
	jsr hexout

	lda #24
	sta crs_x

	lda #1
	sta crs_y

	lda tday
	jsr hexout
	inc crs_x
	lda tmon
	jsr hexout
	inc crs_x
	lda tyea
	jsr hexout



+	pla
	ply	
	plx
	rti

rtc_disable
	pha

	lda #$80
	ora kbd_flg
	sta kbd_flg
	; Deselect any SPI devices
	lda #%11111110
	sta via1portb
	
	pla
	rts

rtc_enable
	pha
	; Select SPI SS for keyboard
	lda #%01110110
	; and via1portb
	sta via1portb

	pla
	rts

; text	!text "Hallo!", $00
time_mask !text "00:00:00", $00
date_mask !text "00.00.00", $00

!src "../vdp/t99xx.lib.a"
